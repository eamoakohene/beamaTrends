fred_view_steel_code(55)
fred_view_steel_code(56)
fred_view_steel_code(57)
fred_view_steel_code(58)
fred_view_steel_code(59)
fred_view_steel_code(60)
fred_view_steel_code(61)
fred_view_steel_code(62)
fred_view_steel_code(63)
fred_view_steel_code(64)
fred_view_steel_code(65)
fred_view_steel_code(66)
fred_view_steel_code(67)
fred_view_steel_code(68)
fred_view_steel_code(69)
fred_view_steel_code(70)
fred_view_steel_code(71)
fred_view_steel_code(72)
fred_view_steel_code(73)
fred_view_steel_code(74)
onsR2::search("Retail")
tp.view_ons_code('J43J')
tp.view_ons_code('J43J',T)
onsR2::search("Retail")
abc <- onsR2::search("Retail")
aaa <- sqldf::sqldf("select * from abc where description like 'RSI:All%'")
nrow(aaa)
aaa
source('R:/packages/beamaTrends/R/brexit_watch_tg.R')
cur_yr <- 2016
cur_mth <- 6
cur_wk <- 24
cur_dy <- 19
SQ <- storedQry::SQ$new( tg.get_db( 'trends' )
)$set_name( 'brexit_soup_add_blank_week' )$set_params(
list(
`@i_yr` = cur_yr,
`@i_mth` = cur_mth ,
`@i_dy` = cur_dy ,
`@i_wk` = cur_wk
)
)$qry_exec()
library(beamaTrends)
cur_yr <- 2016
cur_mth <- 6
cur_wk <- 24
cur_dy <- 19
SQ <- storedQry::SQ$new( tg.get_db( 'trends' )
)$set_name( 'brexit_soup_add_blank_week' )$set_params(
list(
`@i_yr` = cur_yr,
`@i_mth` = cur_mth ,
`@i_dy` = cur_dy ,
`@i_wk` = cur_wk
)
)$qry_exec()
library(beamaTrends)
cde <- beamaTrends::tg$new('K646',db_limit = list(yr=2016,mth=5))
cde$data_ts
library(beamaTrends)
cde <- beamaTrends::tg$new('K646',db_limit = list(yr=2016,mth=5))
cde$data_ts
cur_yr <- 2016
cur_mth <- 6
cur_wk <- 24
cur_dy <- 19
#1.0 Run this once to generate soup blanks
SQ <- storedQry::SQ$new( tg.get_db( 'trends' )
)$set_name( 'brexit_soup_add_blank_week' )$set_params(
list(
`@i_yr` = cur_yr,
`@i_mth` = cur_mth ,
`@i_dy` = cur_dy ,
`@i_wk` = cur_wk
)
)$qry_exec()
library(beamaTrends)
source('R:/packages/beamaTrends/R/brexit_watch_tg.R')
cur_yr <- 2016
cur_mth <- 6
cur_wk <- 24
cur_dy <- 19
for (j in 1:length(bwcodes) ){
for(i in 1:length( bwcodes[[ j ]]$code )){
code <- bwcodes[[ j ]]$code[ i ];
brexit_soup_update_code(code = code, yr = cur_yr, wk = cur_wk, db_limit = list( yr = cur_yr, mth = cur_mth ) )
}
}
bwcodes <- list(
fx  = tibble::tibble( code=c("EURM","USDM","CNYM") , desc= c("Euro","US Dollar","Chinese Yuan"), grp = rep("bw_fx",3) )
,ppi = tibble::tibble( code=c("K646","JVZ7","MC9A"),desc= c("Input Prices", "Output Prices", "Input Prices - Electrical"), grp = rep("bw_ppi",3))
,cpi = tibble::tibble( code=c("D7BT", "CHAW","DK9T","D7CH"),desc= c("Consumer Price Index", "Retail Price Index", "CPI Index - Energy","Electricity, Gas & Other fuels"), grp = rep("bw_cpi",4))
,gdp = tibble::tibble( code=c("ABMI","KAB9","MGSX","OECD/MEI_CLI_LOLITOAA_GBR_M"),desc= c("Gross Domestic Product", "Average Weekly Earnings","Unemployment","OECD - Composite Leading Indicator (UK)"), grp = rep("bw_gdp",4))
,iop = tibble::tibble( code=c("K222","K22A","S2KU"),desc= c("Index of Production", "Index of Manufacturing", "Index of Services"), grp = rep("bw_iop",3))
,exports = tibble::tibble( code=c("IKBH","BQKU","BQKR"),desc= c( "Exports - Value Index", "Exports - Volume Index", "Exports - Price Index"), grp = rep("bw_exports",3))
,electrical = tibble::tibble( code=c("K23Q", "JQG2","MC9A","JQF8"),desc= c( "Index of Production - Electrical", "Turnover - Electrical", "Input Prices - Electrical","Exports - Electrical"), grp = rep("bw_electrical",4))
,construction = tibble::tibble( code=c("CT2AM-ANW","CT2AM-ARM","CT2AM-AW"), desc = c("Construction - New Work","Construction - Repair, Maintainance & Infrastructure - RMI", "Construction - Total Output"), grp = rep("bw_construction",3) )
,construction_qtr = tibble::tibble( code=c("CT2A-ANW","CT2A-ARM","CT2A-AW"), desc = c("Construction - New Work","Construction - Repair, Maintainance & Infrastructure - RMI", "Construction - Total Output"), grp = rep("bw_construction_qtr",3) )
)
for (j in 1:length(bwcodes) ){
for(i in 1:length( bwcodes[[ j ]]$code )){
code <- bwcodes[[ j ]]$code[ i ];
brexit_soup_update_code(code = code, yr = cur_yr, wk = cur_wk, db_limit = list( yr = cur_yr, mth = cur_mth ) )
}
}
brexit_soup_update_code <- function(code, yr, wk , db_limit = list(yr=NULL, mth=12) ){
my_code <- code
abc <- td$new( my_code, db_limit = db_limit )
y <- abc$get_yoy()$YoY
x <- abc$get_mom()$MoM
if( is.null( x ) || is.null( y ) ){
cat( sprintf("x = %s, y=%s \n", x, y ))
return (NULL)
}
SQ <- storedQry::SQ$new( tg.get_db( 'trends' )
)$set_name( 'brexit_soup_update_code' )$set_params(
list(
`@s_code` = code,
`@i_yr` = cur_yr,
`@i_wk` = cur_wk,
`@i_x` = x,
`@i_y` = y
)
)$qry_exec()
}
#2.0 Run this to populate blanks with growth data
for (j in 1:length(bwcodes) ){
for(i in 1:length( bwcodes[[ j ]]$code )){
code <- bwcodes[[ j ]]$code[ i ];
brexit_soup_update_code(code = code, yr = cur_yr, wk = cur_wk, db_limit = list( yr = cur_yr, mth = cur_mth ) )
}
}
cde <- beamaTrends::td$new('K646',db_limit = list(yr=2016,mth=5))
cde$get_growth_desc()
code = K646;yr=2016;wk=24;db_limit = list(yr=cur_yr, mth= cur_mth)
#code = "K646";yr=2016;wk=24;db_limit = list(yr=cur_yr, mth= cur_mth)
code = "K646";yr=2016;wk=24;db_limit = list(yr=cur_yr, mth= cur_mth)
my_code <- code
abc <- td$new( my_code, db_limit = db_limit )
y <- abc$get_yoy()$YoY
x <- abc$get_mom()$MoM
x <- abc$get_mtm()$MoM
x
y
library(beamaTrends)
source('R:/packages/beamaTrends/R/brexit_watch_tg.R')
bwcodes <- list(
fx  = tibble::tibble( code=c("EURM","USDM","CNYM") , desc= c("Euro","US Dollar","Chinese Yuan"), grp = rep("bw_fx",3) )
,ppi = tibble::tibble( code=c("K646","JVZ7","MC9A"),desc= c("Input Prices", "Output Prices", "Input Prices - Electrical"), grp = rep("bw_ppi",3))
,cpi = tibble::tibble( code=c("D7BT", "CHAW","DK9T","D7CH"),desc= c("Consumer Price Index", "Retail Price Index", "CPI Index - Energy","Electricity, Gas & Other fuels"), grp = rep("bw_cpi",4))
,gdp = tibble::tibble( code=c("ABMI","KAB9","MGSX","OECD/MEI_CLI_LOLITOAA_GBR_M"),desc= c("Gross Domestic Product", "Average Weekly Earnings","Unemployment","OECD - Composite Leading Indicator (UK)"), grp = rep("bw_gdp",4))
,iop = tibble::tibble( code=c("K222","K22A","S2KU"),desc= c("Index of Production", "Index of Manufacturing", "Index of Services"), grp = rep("bw_iop",3))
,exports = tibble::tibble( code=c("IKBH","BQKU","BQKR"),desc= c( "Exports - Value Index", "Exports - Volume Index", "Exports - Price Index"), grp = rep("bw_exports",3))
,electrical = tibble::tibble( code=c("K23Q", "JQG2","MC9A","JQF8"),desc= c( "Index of Production - Electrical", "Turnover - Electrical", "Input Prices - Electrical","Exports - Electrical"), grp = rep("bw_electrical",4))
,construction = tibble::tibble( code=c("CT2AM-ANW","CT2AM-ARM","CT2AM-AW"), desc = c("Construction - New Work","Construction - Repair, Maintainance & Infrastructure - RMI", "Construction - Total Output"), grp = rep("bw_construction",3) )
,construction_qtr = tibble::tibble( code=c("CT2A-ANW","CT2A-ARM","CT2A-AW"), desc = c("Construction - New Work","Construction - Repair, Maintainance & Infrastructure - RMI", "Construction - Total Output"), grp = rep("bw_construction_qtr",3) )
)
brexit_soup_update_code <- function(code, yr, wk , db_limit = list(yr=NULL, mth=12) ){
#code = "K646";yr=2016;wk=24;db_limit = list(yr=cur_yr, mth= cur_mth)
my_code <- code
abc <- td$new( my_code, db_limit = db_limit )
y <- abc$get_yoy()$YoY
x <- abc$get_mtm()$MoM
if( is.null( x ) || is.null( y ) ){
cat( sprintf("x = %s, y=%s \n", x, y ))
return (NULL)
}
SQ <- storedQry::SQ$new( tg.get_db( 'trends' )
)$set_name( 'brexit_soup_update_code' )$set_params(
list(
`@s_code` = code,
`@i_yr` = cur_yr,
`@i_wk` = cur_wk,
`@i_x` = x,
`@i_y` = y
)
)$qry_exec()
}
cur_yr <- 2016
cur_mth <- 6
cur_wk <- 24
cur_dy <- 19
for (j in 1:length(bwcodes) ){
for(i in 1:length( bwcodes[[ j ]]$code )){
code <- bwcodes[[ j ]]$code[ i ];
brexit_soup_update_code(code = code, yr = cur_yr, wk = cur_wk, db_limit = list( yr = cur_yr, mth = cur_mth ) )
}
}
brexit_soup_update_code(code = 'JQF8', yr = cur_yr, wk = cur_wk, db_limit = list( yr = cur_yr, mth = cur_mth ) )
SQ <- storedQry::SQ$new(  tg.get_db( 'trends' ) )$set_name( 'brexit_soup_update_group' )$qry_exec()
SQ
plot_soup( x_delta=c(0,1), y_delta=c(0,2),img_large_factor = 1.5 )
plot_soup <- function(title="Economy",grp_id= 1,is_themed = T,  strip_col = beamaColours::get_blue(), save_file = T,file_name ='economy',
strip_fcol = 'white', strip_txt_size = 12, y_delta=c(0,0),x_delta=c(0,0)
,img_path = "X:/BEAMAstuff/publications/brexit_watch/latex/images/"
,img_width = 500
,img_height = 300
,ppi=72
,img_large_factor = 1.5
){
require(ggplot2)
require(scales)
my_soup <- tg.get_brexit_soup_data()
my_soup <- dplyr::filter(my_soup,grp == grp_id)
my_soup$wk_str <- paste0("Week ", my_soup$wk)
my_soup$period_str <- "mth"
my_soup$period_str[my_soup$period == 4] <- "qtr"
g <- ggplot2::ggplot(my_soup, aes(x = x, y=y)) + geom_point( aes(size = abs(y), colour = factor( period_str )) )
g <- g + geom_text(data=my_soup,aes(x = x, y=y, label = code_abb) , vjust= -0.8, hjust = 0.4)
g <- g + geom_hline(yintercept = 0)+ geom_vline(xintercept = 0)
g <- g + facet_wrap(~yr+wk_str)
g <- g + ylab("Annual growth (%)") + xlab("1-month (or 1-quarter) % growth ")+ ggtitle( title)
g <- g +  guides(size = "none", colour = guide_legend("freq"))
y_range <- g_range <- ggplot_build(g)$layout$panel_ranges[[1]]$y.range
if( !( y_delta[1] == 0) ){
y_range[1] <- g_range[1] - y_delta[1]
}
if(!( y_delta[2] == 0)){
y_range[2] <- g_range[2] + y_delta[2]
}
if( !( sum(y_delta) == 0) ) {
g <- g + ylim( y_range )
}
x_range <- g_range <- ggplot_build(g)$layout$panel_ranges[[1]]$x.range
if( !( x_delta[1] == 0) ){
x_range[1] <- g_range[1] - x_delta[1]
}
if(!( x_delta[2] == 0)){
x_range[2] <- g_range[2] + x_delta[2]
}
if( !( sum(x_delta) == 0) ) {
g <- g + xlim( x_range )
}
if(is_themed){
g <- g + theme_igray()
g <- g + scale_colour_tableau("colorblind10")
g <- g + theme(
strip.background = element_rect(colour = strip_col, fill = strip_col),
strip.text.x = element_text(colour = strip_fcol, size= strip_txt_size)
)
}
print(g)
#save plot
if(save_file){
tp_utils$new()$plot_save(file= paste0("brexit_watch_glance_",file_name), width = img_width*img_large_factor, height = img_height*img_large_factor, path = img_path, ppi = ppi*img_large_factor)
}
}
plot_soup( x_delta=c(0,1), y_delta=c(0,2),img_large_factor = 1.5 )
plot_soup <- function(title="Economy",grp_id= 1,is_themed = T,  strip_col = beamaColours::get_blue(), save_file = T,file_name ='economy',
strip_fcol = 'white', strip_txt_size = 12, y_delta=c(0,0),x_delta=c(0,0)
,img_path = "X:/BEAMAstuff/publications/brexit_watch/latex/images/"
,img_width = 500
,img_height = 300
,ppi=72
,img_large_factor = 1.5
){
require(ggplot2)
require(scales)
require(ggthemes)
my_soup <- tg.get_brexit_soup_data()
my_soup <- dplyr::filter(my_soup,grp == grp_id)
my_soup$wk_str <- paste0("Week ", my_soup$wk)
my_soup$period_str <- "mth"
my_soup$period_str[my_soup$period == 4] <- "qtr"
g <- ggplot2::ggplot(my_soup, aes(x = x, y=y)) + geom_point( aes(size = abs(y), colour = factor( period_str )) )
g <- g + geom_text(data=my_soup,aes(x = x, y=y, label = code_abb) , vjust= -0.8, hjust = 0.4)
g <- g + geom_hline(yintercept = 0)+ geom_vline(xintercept = 0)
g <- g + facet_wrap(~yr+wk_str)
g <- g + ylab("Annual growth (%)") + xlab("1-month (or 1-quarter) % growth ")+ ggtitle( title)
g <- g +  guides(size = "none", colour = guide_legend("freq"))
y_range <- g_range <- ggplot_build(g)$layout$panel_ranges[[1]]$y.range
if( !( y_delta[1] == 0) ){
y_range[1] <- g_range[1] - y_delta[1]
}
if(!( y_delta[2] == 0)){
y_range[2] <- g_range[2] + y_delta[2]
}
if( !( sum(y_delta) == 0) ) {
g <- g + ylim( y_range )
}
x_range <- g_range <- ggplot_build(g)$layout$panel_ranges[[1]]$x.range
if( !( x_delta[1] == 0) ){
x_range[1] <- g_range[1] - x_delta[1]
}
if(!( x_delta[2] == 0)){
x_range[2] <- g_range[2] + x_delta[2]
}
if( !( sum(x_delta) == 0) ) {
g <- g + xlim( x_range )
}
if(is_themed){
g <- g + theme_igray()
g <- g + scale_colour_tableau("colorblind10")
g <- g + theme(
strip.background = element_rect(colour = strip_col, fill = strip_col),
strip.text.x = element_text(colour = strip_fcol, size= strip_txt_size)
)
}
print(g)
#save plot
if(save_file){
tp_utils$new()$plot_save(file= paste0("brexit_watch_glance_",file_name), width = img_width*img_large_factor, height = img_height*img_large_factor, path = img_path, ppi = ppi*img_large_factor)
}
}
plot_soup( x_delta=c(0,1), y_delta=c(0,2),img_large_factor = 1.5 )
plot_soup( x_delta=c(0,1), y_delta=c(0,2),img_large_factor = 1.5 )
plot_soup( x_delta=c(0,1), y_delta=c(0,2),img_large_factor = 1.5 )
plot_soup(title="Electrical - SIC 27", grp_id = 2, x_delta=c(2,2), y_delta=c(0,2), file_name='electrical',img_large_factor = 1.5,img_height = 300 )
abc = "2016W24,2017W7"
beamaUtils::split_str
abc_split <- strsplit(abc,",")
abc_split
abc_split <- strsplit(abc,",")[[1]]
substr(abc_split,4)
abc_num <- substr(abc_split,1,4)
as.numeric(substr(abc_split,1,4))
abc_num <- as.numeric(substr(abc_split,1,4)) *52 +  as.numeric( substr(abc_split,6,8) )
plot_soup <- function(title="Economy",grp_id= 1,is_themed = T,  strip_col = beamaColours::get_blue(), save_file = T,file_name ='economy',
strip_fcol = 'white', strip_txt_size = 12, y_delta=c(0,0),x_delta=c(0,0)
,img_path = "X:/BEAMAstuff/publications/brexit_watch/latex/images/"
,img_width = 500
,img_height = 300
,ppi=72
,img_large_factor = 1.5,
select_wk = "2016W24,2017W7"
){
require(ggplot2)
require(scales)
require(ggthemes)
my_soup <- tg.get_brexit_soup_data()
my_soup <- dplyr::filter(my_soup,grp == grp_id)
if(! is.null(select_wk)){
my_wk <- strsplit( select_wk ,",")[[1]]
my_wk_filter <- as.numeric( substr( my_wk ,1,4) ) *52 +  as.numeric( substr( my_wk , 6, 8) )
my_soup <- dplyr::filter( my_soup, data_wk %in% my_wk_filter )
}
my_soup$wk_str <- paste0("Week ", my_soup$wk)
my_soup$period_str <- "mth"
my_soup$period_str[my_soup$period == 4] <- "qtr"
g <- ggplot2::ggplot(my_soup, aes(x = x, y=y)) + geom_point( aes(size = abs(y), colour = factor( period_str )) )
g <- g + geom_text(data=my_soup,aes(x = x, y=y, label = code_abb) , vjust= -0.8, hjust = 0.4)
g <- g + geom_hline(yintercept = 0)+ geom_vline(xintercept = 0)
g <- g + facet_wrap(~yr+wk_str)
g <- g + ylab("Annual growth (%)") + xlab("1-month (or 1-quarter) % growth ")+ ggtitle( title)
g <- g +  guides(size = "none", colour = guide_legend("freq"))
y_range <- g_range <- ggplot_build(g)$layout$panel_ranges[[1]]$y.range
if( !( y_delta[1] == 0) ){
y_range[1] <- g_range[1] - y_delta[1]
}
if(!( y_delta[2] == 0)){
y_range[2] <- g_range[2] + y_delta[2]
}
if( !( sum(y_delta) == 0) ) {
g <- g + ylim( y_range )
}
x_range <- g_range <- ggplot_build(g)$layout$panel_ranges[[1]]$x.range
if( !( x_delta[1] == 0) ){
x_range[1] <- g_range[1] - x_delta[1]
}
if(!( x_delta[2] == 0)){
x_range[2] <- g_range[2] + x_delta[2]
}
if( !( sum(x_delta) == 0) ) {
g <- g + xlim( x_range )
}
if(is_themed){
g <- g + theme_igray()
g <- g + scale_colour_tableau("colorblind10")
g <- g + theme(
strip.background = element_rect(colour = strip_col, fill = strip_col),
strip.text.x = element_text(colour = strip_fcol, size= strip_txt_size)
)
}
print(g)
#save plot
if(save_file){
tp_utils$new()$plot_save(file= paste0("brexit_watch_glance_",file_name), width = img_width*img_large_factor, height = img_height*img_large_factor, path = img_path, ppi = ppi*img_large_factor)
}
}
plot_soup( x_delta=c(0,1), y_delta=c(0,2),img_large_factor = 1.5 )
plot_soup <- function(title="Economy",grp_id= 1,is_themed = T,  strip_col = beamaColours::get_blue(), save_file = T,file_name ='economy',
strip_fcol = 'white', strip_txt_size = 12, y_delta=c(0,0),x_delta=c(0,0)
,img_path = "X:/BEAMAstuff/publications/brexit_watch/latex/images/"
,img_width = 500
,img_height = 300
,ppi=72
,img_large_factor = 1.5,
select_wk = "2016W24,2017W7"
){
require(ggplot2)
require(scales)
require(ggthemes)
my_soup <- tg.get_brexit_soup_data()
my_soup <- dplyr::filter(my_soup,grp == grp_id)
if(! is.null(select_wk)){
my_wk <- strsplit( select_wk ,",")[[1]]
my_wk_filter <- as.numeric( substr( my_wk ,1,4) ) *52 +  as.numeric( substr( my_wk , 6, 8) )
my_soup <- dplyr::filter( my_soup, data_wks %in% my_wk_filter )
}
my_soup$wk_str <- paste0("Week ", my_soup$wk)
my_soup$period_str <- "mth"
my_soup$period_str[my_soup$period == 4] <- "qtr"
g <- ggplot2::ggplot(my_soup, aes(x = x, y=y)) + geom_point( aes(size = abs(y), colour = factor( period_str )) )
g <- g + geom_text(data=my_soup,aes(x = x, y=y, label = code_abb) , vjust= -0.8, hjust = 0.4)
g <- g + geom_hline(yintercept = 0)+ geom_vline(xintercept = 0)
g <- g + facet_wrap(~yr+wk_str)
g <- g + ylab("Annual growth (%)") + xlab("1-month (or 1-quarter) % growth ")+ ggtitle( title)
g <- g +  guides(size = "none", colour = guide_legend("freq"))
y_range <- g_range <- ggplot_build(g)$layout$panel_ranges[[1]]$y.range
if( !( y_delta[1] == 0) ){
y_range[1] <- g_range[1] - y_delta[1]
}
if(!( y_delta[2] == 0)){
y_range[2] <- g_range[2] + y_delta[2]
}
if( !( sum(y_delta) == 0) ) {
g <- g + ylim( y_range )
}
x_range <- g_range <- ggplot_build(g)$layout$panel_ranges[[1]]$x.range
if( !( x_delta[1] == 0) ){
x_range[1] <- g_range[1] - x_delta[1]
}
if(!( x_delta[2] == 0)){
x_range[2] <- g_range[2] + x_delta[2]
}
if( !( sum(x_delta) == 0) ) {
g <- g + xlim( x_range )
}
if(is_themed){
g <- g + theme_igray()
g <- g + scale_colour_tableau("colorblind10")
g <- g + theme(
strip.background = element_rect(colour = strip_col, fill = strip_col),
strip.text.x = element_text(colour = strip_fcol, size= strip_txt_size)
)
}
print(g)
#save plot
if(save_file){
tp_utils$new()$plot_save(file= paste0("brexit_watch_glance_",file_name), width = img_width*img_large_factor, height = img_height*img_large_factor, path = img_path, ppi = ppi*img_large_factor)
}
}
plot_soup( x_delta=c(0,1), y_delta=c(0,2),img_large_factor = 1.5 )
plot_soup( x_delta=c(1,2), y_delta=c(0,2),img_large_factor = 1.5 )
plot_soup(title="Electrical - SIC 27", grp_id = 2, x_delta=c(2,2), y_delta=c(0,2), file_name='electrical',img_large_factor = 1.5,img_height = 300 )
plot_soup(title="Electrical - SIC 27", grp_id = 2, x_delta=c(2,4), y_delta=c(0,2), file_name='electrical',img_large_factor = 1.5,img_height = 300 )
plot_soup(title="Electrical - SIC 27", grp_id = 2, x_delta=c(2,6), y_delta=c(0,2), file_name='electrical',img_large_factor = 1.5,img_height = 300 )
plot_soup(title="Electrical - SIC 27", grp_id = 2, x_delta=c(3,6), y_delta=c(0,2), file_name='electrical',img_large_factor = 1.5,img_height = 300 )
plot_soup <- function(title="Economy",grp_id= 1,is_themed = T,  strip_col = beamaColours::get_blue(), save_file = T,file_name ='economy',
strip_fcol = 'white', strip_txt_size = 12, y_delta=c(0,0),x_delta=c(0,0)
,img_path = "X:/BEAMAstuff/publications/brexit_watch/latex/images/"
,img_width = 500
,img_height = 300
,ppi=72
,img_large_factor = 1.5,
select_wk = NULL
){
require(ggplot2)
require(scales)
require(ggthemes)
my_soup <- tg.get_brexit_soup_data()
my_soup <- dplyr::filter(my_soup,grp == grp_id)
if(! is.null(select_wk)){
my_wk <- strsplit( select_wk ,",")[[1]]
my_wk_filter <- as.numeric( substr( my_wk ,1,4) ) *52 +  as.numeric( substr( my_wk , 6, 8) )
my_soup <- dplyr::filter( my_soup, data_wks %in% my_wk_filter )
}
my_soup$wk_str <- paste0("Week ", my_soup$wk)
my_soup$period_str <- "mth"
my_soup$period_str[my_soup$period == 4] <- "qtr"
g <- ggplot2::ggplot(my_soup, aes(x = x, y=y)) + geom_point( aes(size = abs(y), colour = factor( period_str )) )
g <- g + geom_text(data=my_soup,aes(x = x, y=y, label = code_abb) , vjust= -0.8, hjust = 0.4)
g <- g + geom_hline(yintercept = 0)+ geom_vline(xintercept = 0)
g <- g + facet_wrap(~yr+wk_str)
g <- g + ylab("Annual growth (%)") + xlab("1-month (or 1-quarter) % growth ")+ ggtitle( title)
g <- g +  guides(size = "none", colour = guide_legend("freq"))
y_range <- g_range <- ggplot_build(g)$layout$panel_ranges[[1]]$y.range
if( !( y_delta[1] == 0) ){
y_range[1] <- g_range[1] - y_delta[1]
}
if(!( y_delta[2] == 0)){
y_range[2] <- g_range[2] + y_delta[2]
}
if( !( sum(y_delta) == 0) ) {
g <- g + ylim( y_range )
}
x_range <- g_range <- ggplot_build(g)$layout$panel_ranges[[1]]$x.range
if( !( x_delta[1] == 0) ){
x_range[1] <- g_range[1] - x_delta[1]
}
if(!( x_delta[2] == 0)){
x_range[2] <- g_range[2] + x_delta[2]
}
if( !( sum(x_delta) == 0) ) {
g <- g + xlim( x_range )
}
if(is_themed){
g <- g + theme_igray()
g <- g + scale_colour_tableau("colorblind10")
g <- g + theme(
strip.background = element_rect(colour = strip_col, fill = strip_col),
strip.text.x = element_text(colour = strip_fcol, size= strip_txt_size)
)
}
print(g)
#save plot
if(save_file){
tp_utils$new()$plot_save(file= paste0("brexit_watch_glance_",file_name), width = img_width*img_large_factor, height = img_height*img_large_factor, path = img_path, ppi = ppi*img_large_factor)
}
}
plot_soup( x_delta=c(1,2), y_delta=c(0,2),img_large_factor = 1.5 ) #, select_wk = "2016W24,2017W7"
library(beamaTrends)
